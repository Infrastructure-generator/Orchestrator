name: 'Terragrunt GitHub Actions'

on:
  push:
    branches:
    - main
  pull_request:

env:
  tf_version: 'latest'
  tg_version: 'latest'
  tf_working_dir: null

jobs:
  terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            case $file in
              lab/resources/config.yml)
                echo "tf_working_dir=lab/resources" >> $GITHUB_ENV
                echo "Detected change in lab environment"
                ;;
              garaza/resources/config.yml)
                echo "tf_working_dir=garaza/resources" >> $GITHUB_ENV
                echo "Detected change in garaza environment"
                ;;
            esac
          done

      - name: 'Terragrunt Format'
        if: ${{ env.tf_working_dir }} != null
        uses: Infrastructure-generator/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terraform'
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAGRUNT_TOKEN }}

      - name: 'Terragrunt Init'
        if: ${{ env.tf_working_dir }} != null
        uses: Infrastructure-generator/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_subcommand: 'init'
          tf_actions_cli_credentials_token: ${{ secrets.TFC_TOKEN }}
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAGRUNT_TOKEN }}

      - name: 'Terragrunt Validate'
        if: ${{ env.tf_working_dir }} != null
        uses: Infrastructure-generator/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terraform'
          tf_actions_subcommand: 'validate'
          tf_actions_cli_credentials_token: ${{ secrets.TFC_TOKEN }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAGRUNT_TOKEN }}

      - name: 'Terragrunt Plan'
        if: ${{ (github.event_name == 'pull_request') && (env.tf_working_dir != null) }}
        uses: Infrastructure-generator/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_cli_credentials_token: ${{ secrets.TFC_TOKEN }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAGRUNT_TOKEN }}
          TF_VAR_lxdremote_password: ${{ secrets.LXDREMOTE_PASSWORD }}

      - name: 'Terragrunt Apply'
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && env.tf_working_dir != null }}
        uses: Infrastructure-generator/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_cli_credentials_token: ${{ secrets.TFC_TOKEN }}
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.TERRAGRUNT_TOKEN }}
          TF_VAR_lxdremote_password: ${{ secrets.LXDREMOTE_PASSWORD }}
